{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Cell.svelte",
    "../../Clue.svelte",
    "../../ClueList.svelte",
    "../../Clues.svelte",
    "../../CompletedMessage.svelte",
    "../../Confetti.svelte",
    "../../Crossword.svelte",
    "../../Puzzle.svelte",
    "../../Toolbar.svelte",
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let x;\n  export let y;\n  export let value;\n  export let number;\n  export let index;\n  export let custom;\n  export let changeDelay = 0;\n  export let isRevealing = false;\n  export let isFocused = false;\n  export let isSecondarilyFocused = false;\n  export let onFocusCell = () => {};\n  export let onCellUpdate = () => {};\n  export let onFocusClueDiff = () => {};\n  export let onMoveFocus = () => {};\n  export let onFlipDirection = () => {};\n  export let onHistoricalChange = () => {};\n\n  let element;\n\n  const onFocusSelf = () => {\n    if (!element) return;\n    if (isFocused) element.focus();\n  };\n\n  $: isFocused, onFocusSelf();\n\n  const onKeydown = (e) => {\n    if (e.ctrlKey && e.key.toLowerCase() == \"z\") {\n      onHistoricalChange(e.shiftKey ? 1 : -1);\n    }\n\n    if (e.ctrlKey) return;\n    if (e.altKey) return;\n\n    if (e.key === \"Tab\") {\n      onFocusClueDiff(e.shiftKey ? -1 : 1);\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    if (e.key == \" \") {\n      onFlipDirection();\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    if ([\"Delete\", \"Backspace\"].includes(e.key)) {\n      onCellUpdate(index, \"\", -1);\n      return;\n    }\n\n    const isKeyInAlphabet = /^[a-zA-Z()]$/.test(e.key);\n    if (isKeyInAlphabet) {\n      onCellUpdate(index, e.key.toUpperCase());\n      return;\n    }\n\n    const diff = {\n      ArrowLeft: [\"across\", -1],\n      ArrowRight: [\"across\", 1],\n      ArrowUp: [\"down\", -1],\n      ArrowDown: [\"down\", 1],\n    }[e.key];\n    if (diff) {\n      onMoveFocus(...diff);\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n  };\n  const onClick = () => {\n    onFocusCell(index);\n  };\n\n  const pop = (node, { delay = 0, duration = 200 }) => ({\n    delay,\n    duration,\n    css: (t) =>\n      [\n        `transform: translate(0, ${1 - t}px)`, //\n      ].join(\";\"),\n  });\n</script>\n\n<!-- <svelte:window on:keydown={onKeydown} /> -->\n\n<g\n  class=\"cell {custom}\"\n  class:is-focused=\"{isFocused}\"\n  class:is-secondarily-focused=\"{isSecondarilyFocused}\"\n  transform=\"{`translate(${x}, ${y})`}\"\n  id=\"cell-{x}-{y}\"\n  tabIndex=\"0\"\n  on:click=\"{onClick}\"\n  on:keydown=\"{onKeydown}\"\n  bind:this=\"{element}\">\n  <rect width=\"1\" height=\"1\"></rect>\n  {#if value}\n    <text\n      transition:pop=\"{{ y: 6, delay: changeDelay, duration: isRevealing ? 200 : 0 }}\"\n      class=\"value\"\n      x=\"0.5\"\n      y=\"0.9\"\n      alignment-baseline=\"baseline\"\n      text-anchor=\"middle\">\n      {value}\n    </text>\n  {/if}\n  <text\n    class=\"number\"\n    x=\"0.1\"\n    y=\"0.1\"\n    alignment-baseline=\"hanging\"\n    text-anchor=\"start\">\n    {number}\n  </text>\n</g>\n\n<style>\n  g {\n    cursor: pointer;\n    user-select: none;\n  }\n\n  g:focus {\n    outline: none;\n  }\n\n  g.is-secondarily-focused rect {\n    fill: var(--cell-highlight-color, #ffec99);\n  }\n\n  g.is-focused rect {\n    fill: var(--cell-secondary-color, #ffcc00);\n  }\n\n  rect {\n    transition: fill 0.1s ease-out;\n  }\n\n  text {\n    pointer-events: none;\n    line-height: 1;\n    fill: var(--cell-text-color, #1a1a1a);\n  }\n\n  .value {\n    font-size: var(--cell-font-size, 0.7em);\n    font-weight: var(--cell-font-weight, 700);\n  }\n\n  .number {\n    font-size: var(--number-font-size, 0.3em);\n    font-weight: var(--number-font-weight, 300);\n    fill: var(--number-color, #8a8a8a);\n  }\n\n  rect {\n    fill: var(--cell-bg-color, #fff);\n    stroke: var(--cell-border-color, #1a1a1a);\n    stroke-width: var(--cell-border-width, 0.01);\n  }\n</style>\n",
    "<script>\n  import scrollTo from \"./scroll-to\";\n\n  export let number;\n  export let clue;\n  export let isNumberFocused = false;\n  export let isDirectionFocused = false;\n  export let onFocus = () => {};\n\n  let element;\n\n  $: isFocused = isNumberFocused;\n</script>\n\n<li bind:this=\"{element}\" use:scrollTo=\"{isFocused}\">\n  <button\n    class=\"clue\"\n    class:is-number-focused=\"{isNumberFocused}\"\n    class:is-direction-focused=\"{isDirectionFocused}\"\n    on:click=\"{onFocus}\">\n    {number}.\n    {clue}\n  </button>\n</li>\n\n<style>\n  button {\n    display: block;\n    width: 100%;\n    background: none;\n    text-align: left;\n    appearance: none;\n    outline: none;\n    border: 1px solid transparent;\n    border-left: 6px solid transparent;\n    padding: 0.5em;\n    cursor: pointer;\n    line-height: 1.325;\n    color: var(--clue-text-color, #1a1a1a);\n    font-family: var(--clue-font, -apple-system, Helvetica, sans-serif);\n    font-size: 1em;\n  }\n  .clue:focus {\n    border-color: var(--cell-highlight-color, #ffec99);\n  }\n  .is-number-focused {\n    border-left-color: var(--cell-highlight-color, #ffec99);\n  }\n  .is-number-focused.is-direction-focused {\n    background: var(--cell-highlight-color, #ffec99);\n  }\n</style>\n",
    "<script>\n  import Clue from \"./Clue.svelte\";\n\n  export let direction;\n  export let clues;\n  export let focusedClueNumbers;\n  export let isDirectionFocused;\n  export let onClueFocus;\n</script>\n\n<div class=\"list\">\n  <p>{direction}</p>\n  <ul>\n    {#each clues as clue}\n      <Clue\n        clue=\"{clue.clue}\"\n        number=\"{clue.number}\"\n        isNumberFocused=\"{focusedClueNumbers[direction] == clue.number}\"\n        isDirectionFocused=\"{isDirectionFocused}\"\n        onFocus=\"{() => onClueFocus(clue)}\" />\n    {/each}\n  </ul>\n</div>\n\n<style>\n  .list {\n    position: relative;\n    max-height: 45vh;\n    margin-bottom: 2em;\n    overflow: auto;\n  }\n\n  p {\n    font-family: var(--clue-font, -apple-system, Helvetica, sans-serif);\n\t\tcolor: var(--clue-text-color, #1a1a1a);\n\t\tfont-weight: 700;\n    text-transform: uppercase;\n    padding-left: calc(0.5em + 6px);\n    margin: 0;\n  }\n\n  ul {\n    list-style-type: none;\n    padding-left: 0;\n    margin: 0;\n    margin-top: 1em;\n  }\n\n  ::-moz-scrollbar {\n    width: 9px;\n  }\n  ::-webkit-scrollbar {\n    width: 9px;\n  }\n\n  ::-moz-scrollbar-track {\n    box-shadow: none;\n    border-radius: 10px;\n    background: var(--clue-scrollbar-bg, #efefef);\n  }\n  ::-webkit-scrollbar-track {\n    box-shadow: none;\n    border-radius: 10px;\n    background: var(--clue-scrollbar-bg, #efefef);\n  }\n  ::scrollbar-thumb {\n    border-radius: 10px;\n    background: var(--clue-scrollbar-fg, #cdcdcd);\n    box-shadow: none;\n  }\n  ::-moz-scrollbar-thumb {\n    background: var(--clue-scrollbar-fg, #cdcdcd);\n    border-radius: 6px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: var(--clue-scrollbar-fg, #cdcdcd);\n    border-radius: 6px;\n  }\n</style>\n",
    "<script>\n  import ClueList from \"./ClueList.svelte\";\n\n  import Clue from \"./Clue.svelte\";\n\n  export let clues;\n  export let cellIndexMap;\n  export let focusedDirection;\n  export let focusedCellIndex;\n  export let focusedCell;\n\n  $: focusedClueNumbers = focusedCell.clueNumbers || {};\n\n  const onClueFocus = (clue) => {\n    focusedDirection = clue.direction;\n    const cellId = [clue.x, clue.y].join(\"-\");\n    focusedCellIndex = cellIndexMap[cellId] || 0;\n  };\n</script>\n\n<section class=\"clues\">\n  {#each ['across', 'down'] as direction}\n    <ClueList\n      direction=\"{direction}\"\n      focusedClueNumbers=\"{focusedClueNumbers}\"\n      clues=\"{clues.filter((d) => d.direction == direction)}\"\n      isDirectionFocused=\"{focusedDirection == direction}\"\n      onClueFocus=\"{onClueFocus}\" />\n  {/each}\n</section>\n\n<style>\n  section {\n    position: sticky;\n    top: 1em;\n    flex: 0 1 var(--clue-list-width, 16em);\n    height: fit-content;\n    margin: 0 1em;\n  }\n</style>\n",
    "<script>\n  import { fade, fly } from \"svelte/transition\";\n  import Confetti from \"./Confetti.svelte\";\n\n  let isOpen = true;\n</script>\n\n{#if isOpen}\n  <div class=\"c\" transition:fly=\"{{ y: 20 }}\">\n    <div class=\"content\">\n      <h3>You did it!</h3>\n      <button on:click=\"{() => (isOpen = false)}\"> View puzzle </button>\n    </div>\n    <div class=\"confetti\">\n      <Confetti />\n    </div>\n  </div>\n  <div\n    class=\"background\"\n    transition:fade=\"{{ duration: 300 }}\"\n    on:click=\"{() => (isOpen = false)}\"></div>\n{/if}\n\n<style>\n  .c {\n    position: absolute;\n    top: min(50%, 15em);\n    left: 50%;\n    background: white;\n    transform: translate(-50%, -50%);\n    border-radius: 2em;\n    z-index: 10;\n    box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),\n      0 8px 16px -8px rgba(0, 0, 0, 0.3);\n  }\n  .background {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: #fff;\n    opacity: 0.9;\n    cursor: pointer;\n    z-index: 2;\n  }\n  h3 {\n    margin: 0;\n    margin-bottom: 1em;\n  }\n\n  button {\n    appearance: none;\n    background: white;\n    font-weight: 700;\n    border-radius: 2em;\n    line-height: 1.3em;\n    /* color: white; */\n    padding: 0.9em 1.3em;\n    font-size: 0.9em;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n    border: 2px solid black;\n    outline: none;\n    cursor: pointer;\n  }\n  button:hover,\n  button:focus {\n    background: black;\n    color: white;\n  }\n  .content {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2em;\n    z-index: 10;\n  }\n  .confetti {\n    position: absolute;\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n</style>\n",
    "<script>\n  import { quadIn } from \"svelte/easing\";\n\n  export let numberOfElements = 50;\n  export let durationInSeconds = 2;\n  export let colors = [\n    \"#fff\",\n    \"#c7ecee\",\n    \"#778beb\",\n    \"#f7d794\",\n    \"#63cdda\",\n    \"#cf6a87\",\n    \"#e77f67\",\n    \"#786fa6\",\n    \"#FDA7DF\",\n    \"#4b7bec\",\n    \"#475c83\",\n  ];\n\n  const pickFrom = (arr) => arr[Math.round(Math.random() * arr.length)];\n  const randomNumber = (min, max) => Math.random() * (max - min) + min;\n  const getManyOf = (str) => new Array(30).fill(0).map(() => str);\n\n  const elementOptions = [\n    ...getManyOf(`<circle r=\"3\" />`),\n    ...getManyOf(\n      `<path d=\"M3.83733 4.73234C4.38961 4.73234 4.83733 4.28463 4.83733 3.73234C4.83733 3.18006 4.38961 2.73234 3.83733 2.73234C3.28505 2.73234 2.83733 3.18006 2.83733 3.73234C2.83733 4.28463 3.28505 4.73234 3.83733 4.73234ZM3.83733 6.73234C5.49418 6.73234 6.83733 5.38919 6.83733 3.73234C6.83733 2.07549 5.49418 0.732341 3.83733 0.732341C2.18048 0.732341 0.83733 2.07549 0.83733 3.73234C0.83733 5.38919 2.18048 6.73234 3.83733 6.73234Z\" />`\n    ),\n    ...getManyOf(\n      `<path d=\"M4.29742 2.26041C3.86864 2.1688 3.20695 2.21855 2.13614 3.0038C1.69078 3.33041 1.06498 3.23413 0.738375 2.78876C0.411774 2.3434 0.508051 1.7176 0.953417 1.39099C2.32237 0.387097 3.55827 0.0573281 4.71534 0.304565C5.80081 0.536504 6.61625 1.24716 7.20541 1.78276C7.28295 1.85326 7.35618 1.92051 7.4263 1.9849C7.64841 2.18888 7.83929 2.36418 8.03729 2.52315C8.29108 2.72692 8.48631 2.8439 8.64952 2.90181C8.7915 2.95219 8.91895 2.96216 9.07414 2.92095C9.24752 2.8749 9.5134 2.7484 9.88467 2.42214C10.2995 2.05757 10.9314 2.09833 11.2959 2.51319C11.6605 2.92805 11.6198 3.5599 11.2049 3.92447C10.6816 4.38435 10.1478 4.70514 9.58752 4.85394C9.00909 5.00756 8.469 4.95993 7.9807 4.78667C7.51364 4.62093 7.11587 4.34823 6.78514 4.08268C6.53001 3.87783 6.27248 3.64113 6.04114 3.4285C5.97868 3.37109 5.91814 3.31544 5.86006 3.26264C5.25645 2.7139 4.79779 2.36733 4.29742 2.26041Z\" />`\n    ),\n    ...getManyOf(`<rect width=\"4\" height=\"4\" x=\"-2\" y=\"-2\" />`),\n    `<path d=\"M -5 5 L 0 -5 L 5 5 Z\" />`,\n    ...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n      .split(\"\")\n      .map((letter) => `<text style=\"font-weight: 700\">${letter}</text>`),\n  ];\n\n  const allElements = new Array(numberOfElements)\n    .fill(0)\n    .map((_, i) => [pickFrom(elementOptions), pickFrom(colors), Math.random()]);\n</script>\n\n<svg class=\"confetti\" viewBox=\"-10 -10 10 10\">\n  {#each allElements as [element, color, scale], i}\n    <g style=\"transform: scale({scale})\">\n      <g\n        fill=\"{color}\"\n        style=\"{[`--rotation: ${Math.random() * 360}deg`, `animation-delay: ${quadIn(i / numberOfElements)}s`, `animation-duration: ${durationInSeconds * randomNumber(0.7, 1)}s`].join(';')}\">\n        {@html element}\n      </g>\n    </g>\n  {/each}\n</svg>\n\n<style>\n  .confetti {\n    width: 2em;\n    position: absolute;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    fill-rule: evenodd;\n    clip-rule: evenodd;\n    pointer-events: none;\n    overflow: visible;\n    transform: translate(-50%, -50%);\n  }\n  @keyframes pop {\n    0% {\n      transform: rotate(var(--rotation)) scale(1) translate(0em, 0em);\n    }\n    100% {\n      transform: rotate(calc(var(--rotation) + 60deg)) scale(0)\n        translate(9em, 9em);\n      fill: white;\n    }\n  }\n  g {\n    transition: all 0.5s ease-out;\n    transform: rotate(var(--rotation)) scale(0) translate(0, 0);\n    animation: pop 2s ease-out;\n    animation-iteration-count: infinite;\n  }\n</style>\n",
    "<script>\n  import Toolbar from \"./Toolbar.svelte\";\n  import Puzzle from \"./Puzzle.svelte\";\n  import Clues from \"./Clues.svelte\";\n  import CompletedMessage from \"./CompletedMessage.svelte\";\n  import addClueNumber from \"./helpers/addClueNumber.js\";\n  import createCells from \"./helpers/createCells.js\";\n  import validateClues from \"./helpers/validateClues.js\";\n  import { fromPairs } from \"./helpers/utils.js\";\n\n  export let data = [];\n  export let hideReset = false;\n  export let hideReveal = false;\n  export let revealed = false;\n  export let revealDuration = 1000;\n  export let theme;\n\n  let clues = addClueNumber(data);\n  let validated = validateClues(clues);\n  let cells = [];\n  let focusedDirection = \"across\";\n  let focusedCellIndex = 0;\n  let isRevealing = false;\n\n  $: focusedCell = cells[focusedCellIndex] || {};\n  $: clues, (cells = createCells(clues));\n  $: cellIndexMap = fromPairs(cells.map((cell) => [cell.id, cell.index]));\n  $: percentCorrect =\n    cells.filter((d) => d.answer == d.value).length / cells.length;\n  $: isComplete = percentCorrect == 1;\n  $: themeClass = theme ? `theme-${theme}` : \"\";\n\n  let timeout;\n\n  function onReset() {\n    isRevealing = false;\n    cells = cells.map((cell) => ({\n      ...cell,\n      value: \"\",\n    }));\n    revealed = false;\n    startReveal();\n  }\n\n  function onReveal() {\n    isRevealing = false;\n    cells = cells.map((cell) => ({\n      ...cell,\n      value: cell.answer,\n    }));\n    revealed = true;\n    startReveal();\n  }\n\n  function startReveal() {\n    isRevealing = true;\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      isRevealing = false;\n    }, revealDuration + 300);\n  }\n\n  function onToolbarEvent({ detail }) {\n    if (detail === \"reset\") onReset();\n    else if (detail === \"reveal\") onReveal();\n  }\n</script>\n\n<Toolbar\n  hideReset=\"{hideReset}\"\n  hideReveal=\"{hideReveal}\"\n  on:event=\"{onToolbarEvent}\" />\n\n<article class=\"crossword {themeClass}\">\n  {#if validated}\n    <Clues\n      clues=\"{clues}\"\n      cellIndexMap=\"{cellIndexMap}\"\n      bind:focusedCellIndex\n      bind:focusedCell\n      bind:focusedDirection />\n    <Puzzle\n      clues=\"{clues}\"\n      focusedCell=\"{focusedCell}\"\n      isRevealing=\"{isRevealing}\"\n      revealDuration=\"{revealDuration}\"\n      bind:cells\n      bind:focusedCellIndex\n      bind:focusedDirection />\n  {/if}\n\n  {#if isComplete && !isRevealing}\n    <CompletedMessage />\n  {/if}\n</article>\n\n<style>\n  article {\n    position: relative;\n    display: flex;\n    flex-direction: var(--clue-puzzle-order, row);\n  }\n  .theme-classic {\n    --theme-puzzle-border-color: #1a1a1a;\n    --theme-puzzle-font: -apple-system, Helvetica, sans-serif;\n\n    --theme-clue-font: -apple-system, Helvetica, sans-serif;\n    --theme-clue-text-color: #1a1a1a;\n    --theme-clue-scrollbar-bg: #efefef;\n    --theme-clue-scrollbar-fg: #cdcdcd;\n    --theme-clue-puzzle-order: row;\n    --theme-clue-list-width: 16em;\n\n    --theme-cell-highlight-color: #ffec99;\n    --theme-cell-secondary-color: #ffcc00;\n    --theme-cell-bg-color: #fff;\n    --theme-cell-border-color: #1a1a1a;\n    --theme-cell-border-width: 0.01;\n    --theme-cell-text-color: #1a1a1a;\n    --theme-cell-font-size: 0.7em;\n    --theme-cell-font-weight: 700;\n    --theme-cell-void-color: #1a1a1a;\n\n    --theme-number-font-size: 0.3em;\n    --theme-number-font-weight: 400;\n    --theme-number-color: #8a8a8a;\n  }\n\n  .theme-amelia {\n    --theme-puzzle-border-color: #353b48;\n    --theme-puzzle-font: -apple-system, Helvetica, sans-serif;\n\n    --theme-clue-font: -apple-system, Helvetica, sans-serif;\n    --theme-clue-text-color: #353b48;\n    --theme-clue-scrollbar-bg: #d7cefd;\n    --theme-clue-scrollbar-fg: #9980fa;\n    --theme-clue-puzzle-order: row;\n    --theme-clue-list-width: 16em;\n\n    --theme-cell-highlight-color: #d7cefd;\n    --theme-cell-secondary-color: #9980fa;\n    --theme-cell-bg-color: #fff;\n    --theme-cell-border-color: #353b48;\n    --theme-cell-border-width: 0.027;\n    --theme-cell-text-color: #353b48;\n    --theme-cell-font-size: 0.76em;\n    --theme-cell-font-weight: 700;\n    --theme-cell-void-color: #353b48;\n\n    --theme-number-font-size: 0.25em;\n    --theme-number-font-weight: 100;\n    --theme-number-color: #353b48;\n  }\n\n\t.theme-russell {\n    --theme-puzzle-border-color: red;\n    --theme-puzzle-font: -apple-system, Helvetica, sans-serif;\n\n    --theme-clue-font: -apple-system, Helvetica, sans-serif;\n    --theme-clue-text-color: green;\n    --theme-clue-scrollbar-bg: orange;\n    --theme-clue-scrollbar-fg: pink;\n    --theme-clue-puzzle-order: row;\n    --theme-clue-list-width: 16em;\n\n    --theme-cell-highlight-color: orange;\n    --theme-cell-secondary-color: pink;\n    --theme-cell-bg-color: yellow;\n    --theme-cell-border-color: green;\n    --theme-cell-border-width: 0.027;\n    --theme-cell-text-color: blue;\n    --theme-cell-font-size: 0.76em;\n    --theme-cell-font-weight: 700;\n    --theme-cell-void-color: blue;\n\n    --theme-number-font-size: 0.25em;\n    --theme-number-font-weight: 100;\n    --theme-number-color: blue;\n  }\n\n  article {\n    --puzzle-border-color: var(\n      --theme-puzzle-border-color,\n      var(--theme-puzzle-border-color)\n    );\n    --puzzle-font: var(--theme-puzzle-font, var(--theme-puzzle-font));\n    --clue-font: var(--theme-clue-font, var(--theme-clue-font));\n    --clue-text-color: var(\n      --theme-clue-text-color,\n      var(--theme-clue-text-color)\n    );\n    --clue-scrollbar-bg: var(\n      --theme-clue-scrollbar-bg,\n      var(--theme-clue-scrollbar-bg)\n    );\n    --clue-scrollbar-fg: var(\n      --theme-clue-scrollbar-fg,\n      var(--theme-clue-scrollbar-fg)\n    );\n    --clue-puzzle-order: var(\n      --theme-clue-puzzle-order,\n      var(--theme-clue-puzzle-order)\n    );\n    --clue-list-width: var(\n      --theme-clue-list-width,\n      var(--theme-clue-list-width)\n    );\n    --cell-highlight-color: var(\n      --theme-cell-highlight-color,\n      var(--theme-cell-highlight-color)\n    );\n    --cell-secondary-color: var(\n      --theme-cell-secondary-color,\n      var(--theme-cell-secondary-color)\n    );\n    --cell-bg-color: var(--theme-cell-bg-color, var(--theme-cell-bg-color));\n    --cell-border-color: var(\n      --theme-cell-border-color,\n      var(--theme-cell-border-color)\n    );\n    --cell-border-width: var(\n      --theme-cell-border-width,\n      var(--theme-cell-border-width)\n    );\n    --cell-text-color: var(\n      --theme-cell-text-color,\n      var(--theme-cell-text-color)\n    );\n    --cell-font-size: var(--theme-cell-font-size, var(--theme-cell-font-size));\n    --cell-font-weight: var(\n      --theme-cell-font-weight,\n      var(--theme-cell-font-weight)\n    );\n    --cell-void-color: var(\n      --theme-cell-void-color,\n      var(--theme-cell-void-color)\n    );\n    --number-font-size: var(\n      --theme-number-font-size,\n      var(--theme-number-font-size)\n    );\n    --number-font-weight: var(\n      --theme-number-font-weight,\n      var(--theme-number-font-weight)\n    );\n    --number-color: var(--theme-number-color, var(--theme-number-color));\n  }\n</style>\n",
    "<script>\n  import getSecondarilyFocusedCells from \"./helpers/getSecondarilyFocusedCells.js\";\n  import getCellAfterDiff from \"./helpers/getCellAfterDiff.js\";\n\n  import Cell from \"./Cell.svelte\";\n\n  export let clues;\n  export let cells;\n  export let focusedDirection;\n  export let focusedCellIndex;\n  export let focusedCell;\n  export let isRevealing;\n  export let revealDuration = 0;\n\n  let cellsHistoryIndex = 0;\n  let cellsHistory = [];\n  let focusedCellIndexHistoryIndex = 0;\n  let focusedCellIndexHistory = [];\n  const numberOfStatesInHistory = 10;\n\n  const w = Math.max(...cells.map((d) => d.x)) + 1;\n  const h = Math.max(...cells.map((d) => d.y)) + 1;\n\n  let secondarilyFocusedCells = [];\n  const updateSecondarilyFocusedCells = () => {\n    secondarilyFocusedCells = getSecondarilyFocusedCells({\n      cells,\n      focusedDirection,\n      focusedCell,\n    });\n  };\n  $: cells, focusedCellIndex, focusedDirection, updateSecondarilyFocusedCells();\n\n  const onCellUpdate = (index, newValue, diff = 1) => {\n    const doReplaceFilledCells = !!cells[index].value;\n    const newCells = [\n      ...cells.slice(0, index),\n      { ...cells[index], value: newValue },\n      ...cells.slice(index + 1),\n    ];\n    cellsHistory = [newCells, ...cellsHistory.slice(cellsHistoryIndex)].slice(\n      0,\n      numberOfStatesInHistory\n    );\n    cellsHistoryIndex = 0;\n    cells = newCells;\n\n    onFocusCellDiff(diff, doReplaceFilledCells);\n  };\n\n  const onHistoricalChange = (diff) => {\n    cellsHistoryIndex += -diff;\n    cells = cellsHistory[cellsHistoryIndex] || cells;\n    focusedCellIndexHistoryIndex += -diff;\n    focusedCellIndex =\n      focusedCellIndexHistory[cellsHistoryIndex] || focusedCellIndex;\n  };\n\n  const onFocusCell = (index) => {\n    if (index == focusedCellIndex) {\n      onFlipDirection();\n    } else {\n      focusedCellIndex = index;\n      focusedCellIndexHistory = [\n        index,\n        ...focusedCellIndexHistory.slice(0, numberOfStatesInHistory),\n      ];\n      focusedCellIndexHistoryIndex = 0;\n    }\n  };\n\n  $: sortedCellsInDirection = [...cells].sort((a, b) =>\n    focusedDirection == \"down\" ? a.x - b.x || a.y - b.y : a.y - b.y || a.x - b.x\n  );\n\n  const onFocusCellDiff = (diff, doReplaceFilledCells = true) => {\n    const sortedCellsInDirectionFiltered = sortedCellsInDirection.filter((d) =>\n      doReplaceFilledCells ? true : !d.value\n    );\n    const currentCellIndex = sortedCellsInDirectionFiltered.findIndex(\n      (d) => d.index == focusedCellIndex\n    );\n    const nextCellIndex = (\n      sortedCellsInDirectionFiltered[currentCellIndex + diff] || {}\n    ).index;\n    const nextCell = cells[nextCellIndex];\n    if (!nextCell) return;\n    onFocusCell(nextCellIndex);\n  };\n\n  const onFocusClueDiff = (diff = 1) => {\n    const currentNumber = focusedCell.clueNumbers[focusedDirection];\n    let nextCluesInDirection = clues.filter(\n      (clue) =>\n        (diff > 0\n          ? clue.number > currentNumber\n          : clue.number < currentNumber) && clue.direction == focusedDirection\n    );\n    if (diff < 0) {\n      nextCluesInDirection = nextCluesInDirection.reverse();\n    }\n    let nextClue = nextCluesInDirection[Math.abs(diff) - 1];\n    if (!nextClue) {\n      onFlipDirection();\n      nextClue = clues.filter((clue) => clue.direction == focusedDirection)[0];\n    }\n    focusedCellIndex = cells.findIndex(\n      (cell) => cell.x == nextClue.x && cell.y == nextClue.y\n    );\n  };\n\n  const onMoveFocus = (direction, diff) => {\n    if (focusedDirection != direction) {\n      const dimension = direction == \"across\" ? \"x\" : \"y\";\n      focusedDirection = direction;\n    } else {\n      const nextCell = getCellAfterDiff({\n        diff,\n        cells,\n        direction,\n        focusedCell,\n      });\n      if (!nextCell) return;\n      onFocusCell(nextCell.index);\n    }\n  };\n\n  const onFlipDirection = () => {\n    focusedDirection = {\n      across: \"down\",\n      down: \"across\",\n    }[focusedDirection];\n  };\n</script>\n\n<section class=\"puzzle\">\n  <svg viewBox=\"0 0 {w} {h}\">\n    <!-- svg -->\n    {#each cells as { x, y, value, index, number, custom }}\n      <Cell\n        x=\"{x}\"\n        y=\"{y}\"\n        index=\"{index}\"\n        value=\"{value}\"\n        number=\"{number}\"\n        custom=\"{custom}\"\n        changeDelay=\"{isRevealing ? (revealDuration / cells.length) * index : 0}\"\n        isRevealing=\"{isRevealing}\"\n        isFocused=\"{focusedCellIndex == index}\"\n        isSecondarilyFocused=\"{secondarilyFocusedCells.includes(index)}\"\n        onFocusCell=\"{onFocusCell}\"\n        onCellUpdate=\"{onCellUpdate}\"\n        onFocusClueDiff=\"{onFocusClueDiff}\"\n        onMoveFocus=\"{onMoveFocus}\"\n        onFlipDirection=\"{onFlipDirection}\"\n        onHistoricalChange=\"{onHistoricalChange}\" />\n    {/each}\n  </svg>\n</section>\n\n<style>\n  section {\n    flex: 1;\n    position: sticky;\n    top: 1em;\n    height: fit-content;\n  }\n  svg {\n    display: block;\n    font-size: 1px;\n    background: var(--cell-void-color, #1a1a1a);\n    border: 4px solid var(--puzzle-border-color, #1a1a1a);\n    font-family: var(--puzzle-font, -apple-system, Helvetica, sans-serif);\n  }\n</style>\n",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\n\texport let hideReset;\n\texport let hideReveal;\n\n</script>\n<div class=\"toolbar\">\n  {#if !hideReset}\n\t<button on:click=\"{() => dispatch('event', 'reset')}\">Reset</button>\n\t{/if}\n  {#if !hideReveal}\n\t<button on:click=\"{() => dispatch('event', 'reveal')}\">Reveal</button>\n\t{/if}\n</div>\n\n<style>\n\t.toolbar {\n    margin-bottom: 2em;\n  }\n\tbutton {\n\t\tcursor: pointer;\n\t}\n</style>\n",
    "<script>\n  import Crossword from \"../Crossword.svelte\";\n  import dataNYT from \"./data-nyt.json\";\n  import dataOreo from \"./data-oreo.json\";\n  import dataAmelia from \"./data-amelia.json\";\n  import dataUSA from \"./data-usa.json\";\n\n  let revealedUSA;\n</script>\n\n<article>\n  <section class=\"nyt\">\n    <h1>NYT Mini</h1>\n\t\t<p>Default options.</p>\n    <Crossword data=\"{dataNYT}\" />\n  </section>\n\n  <section class=\"amelia\">\n    <h1>Oreo</h1>\n\t\t<p>Custom themes</p>\n\t\t<select>\n\t\t\t<option>Classic</option>\n\t\t\t<option>Dark</option>\n\t\t\t<option>Amelia</option>\n\t\t</select>\n    <Crossword data=\"{dataOreo}\" theme=\"oreo\" />\n  </section>\n\n  <section class:is-revealed=\"{revealedUSA}\" class=\"usa\">\n    <h1>People in USA Today puzzles</h1>\n\t\t<p>Custom class name on cells.</p>\n    <Crossword data=\"{dataUSA}\" bind:revealed=\"{revealedUSA}\" />\n  </section>\n</article>\n\n<style>\n  article {\n    font-family: sans-serif;\n  }\n\t  section {\n    max-width: 960px;\n    margin: 5em auto;\n  }\n  h1 {\n\t\tmargin: 0;\n    font-size: 2em;\n\t\tmax-width: 640px;\n  }\n\tp {\n\t\tmax-width: 640px;\n\t\tmargin: 1em 0;\n\t}\n\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}